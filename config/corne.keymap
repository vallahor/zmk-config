/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&sk {
    quick-release;
    release-after-ms = <300>;
};

/ {
    combos {
        compatible = "zmk,combos";

        esc_combo {
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
            layers = <0>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <21 20 19>;
            layers = <0>;
            timeout-ms = <120>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <14 15 16>;
            timeout-ms = <120>;
            layers = <0>;
        };
    };

    behaviors {
        tap_mod_left: tap_mod_left {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_MOD_LEFT";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&mo 4>;

            tapping-term-ms = <350>;
        };

        tap_mod_right: tap_mod_right {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_MOD_RIGHT";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&mo 5>;

            tapping-term-ms = <350>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&none  &kp Q  &kp W  &kp E          &kp R      &kp T               &kp Y          &kp U           &kp I           &kp O    &kp P          &none
&none  &kp A  &kp S  &kp D          &kp F      &kp G               &kp H          &kp J           &kp K           &kp L    &kp SEMICOLON  &none
&none  &kp Z  &kp X  &kp C          &kp V      &kp B               &kp N          &kp M           &kp COMMA       &kp DOT  &kp SLASH      &none
                     &tap_mod_left  &kp SPACE  &sk LEFT_CONTROL    &kp BACKSPACE  &tap_mod_right  &sk LEFT_SHIFT
            >;
        };

        sym_layer {
            bindings = <
&none  &kp EXCLAMATION  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp HASH   &kp GRAVE     &none             &kp AT_SIGN   &kp AMPERSAND   &kp UNDERSCORE    &kp DOUBLE_QUOTES  &none
&none  &kp PERCENT      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL  &kp DOLLAR    &kp SINGLE_QUOTE  &kp ASTERISK  &kp LEFT_BRACE  &kp RIGHT_BRACE   &kp COLON          &none
&none  &kp TILDE        &kp MINUS             &kp PLUS               &kp CARET  &none         &kp BACKSLASH     &kp PIPE      &kp LESS_THAN   &kp GREATER_THAN  &kp QUESTION       &none
                                              &lt 2 ENTER            &trans     &trans        &trans            &trans        &trans
            >;
        };

        nav_num_layer {
            bindings = <
&none  &kp TAB           &kp HOME        &kp UP_ARROW    &kp END          &kp PAGE_UP      &none              &kp N7  &kp N8  &kp N9  &none         &none
&none  &kp LEFT_CONTROL  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_DOWN    &none              &kp N4  &kp N5  &kp N6  &kp N0        &none
&none  &kp LC(Z)         &kp LC(X)       &kp LC(C)       &kp LC(V)        &none            &none              &kp N1  &kp N2  &kp N3  &kp LEFT_GUI  &none
                                         &trans          &trans           &trans           &kp LC(BACKSPACE)  &trans  &trans
            >;
        };

        fn_layer {
            bindings = <
&none  &none         &none         &none             &none           &none         &none   &kp F7  &kp F8  &kp F9  &kp F12  &none
&none  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp ESCAPE    &none   &kp F4  &kp F5  &kp F6  &kp F10  &none
&none  &kp LC(Z)     &kp LC(X)     &kp LC(C)         &kp LC(V)       &none         &none   &kp F1  &kp F2  &kp F3  &kp F11  &none
                                   &trans            &trans          &trans        &trans  &trans  &trans
            >;
        };

        action_left {
            bindings = <
&trans  &trans        &trans        &trans            &kp LS(TAB)     &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp TAB         &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans            &kp LEFT_SHIFT  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans            &trans          &trans    &trans  &trans  &trans
            >;
        };

        action_right {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LS(TAB)     &trans            &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp TAB         &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT_SHIFT  &trans            &trans        &trans        &trans
                        &trans  &trans  &trans    &trans  &trans          &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        fn_layer_cond {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};
